# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ServerBody.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ServerBody.proto',
  package='ServerBody',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10ServerBody.proto\x12\nServerBody\"\x1e\n\x0cVideoRequest\x12\x0e\n\x06\x66ilter\x18\x01 \x01(\t\"\x1a\n\nVideoReply\x12\x0c\n\x04json\x18\x01 \x01(\t\"#\n\x11VideoListXRequest\x12\x0e\n\x06\x66ilter\x18\x01 \x01(\t\"B\n\x0fVideoListXReply\x12/\n\nVideoListX\x18\x01 \x03(\x0b\x32\x1b.ServerBody.VideoListXModel\"`\n\x0fVideoListXModel\x12\n\n\x02ID\x18\x01 \x01(\x05\x12\x0c\n\x04Name\x18\x02 \x01(\t\x12\x13\n\x0b\x44\x65scription\x18\x03 \x01(\t\x12\x0f\n\x07Picture\x18\x04 \x01(\t\x12\r\n\x05Views\x18\x05 \x01(\x05\x32\x93\x01\n\x04\x42ody\x12?\n\tGetVideos\x12\x18.ServerBody.VideoRequest\x1a\x16.ServerBody.VideoReply\"\x00\x12J\n\nGetVideosX\x12\x1d.ServerBody.VideoListXRequest\x1a\x1b.ServerBody.VideoListXReply\"\x00\x62\x06proto3'
)




_VIDEOREQUEST = _descriptor.Descriptor(
  name='VideoRequest',
  full_name='ServerBody.VideoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='ServerBody.VideoRequest.filter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=62,
)


_VIDEOREPLY = _descriptor.Descriptor(
  name='VideoReply',
  full_name='ServerBody.VideoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='json', full_name='ServerBody.VideoReply.json', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=90,
)


_VIDEOLISTXREQUEST = _descriptor.Descriptor(
  name='VideoListXRequest',
  full_name='ServerBody.VideoListXRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='filter', full_name='ServerBody.VideoListXRequest.filter', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=127,
)


_VIDEOLISTXREPLY = _descriptor.Descriptor(
  name='VideoListXReply',
  full_name='ServerBody.VideoListXReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='VideoListX', full_name='ServerBody.VideoListXReply.VideoListX', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=195,
)


_VIDEOLISTXMODEL = _descriptor.Descriptor(
  name='VideoListXModel',
  full_name='ServerBody.VideoListXModel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ID', full_name='ServerBody.VideoListXModel.ID', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Name', full_name='ServerBody.VideoListXModel.Name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Description', full_name='ServerBody.VideoListXModel.Description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Picture', full_name='ServerBody.VideoListXModel.Picture', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='Views', full_name='ServerBody.VideoListXModel.Views', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=293,
)

_VIDEOLISTXREPLY.fields_by_name['VideoListX'].message_type = _VIDEOLISTXMODEL
DESCRIPTOR.message_types_by_name['VideoRequest'] = _VIDEOREQUEST
DESCRIPTOR.message_types_by_name['VideoReply'] = _VIDEOREPLY
DESCRIPTOR.message_types_by_name['VideoListXRequest'] = _VIDEOLISTXREQUEST
DESCRIPTOR.message_types_by_name['VideoListXReply'] = _VIDEOLISTXREPLY
DESCRIPTOR.message_types_by_name['VideoListXModel'] = _VIDEOLISTXMODEL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

VideoRequest = _reflection.GeneratedProtocolMessageType('VideoRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOREQUEST,
  '__module__' : 'ServerBody_pb2'
  # @@protoc_insertion_point(class_scope:ServerBody.VideoRequest)
  })
_sym_db.RegisterMessage(VideoRequest)

VideoReply = _reflection.GeneratedProtocolMessageType('VideoReply', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOREPLY,
  '__module__' : 'ServerBody_pb2'
  # @@protoc_insertion_point(class_scope:ServerBody.VideoReply)
  })
_sym_db.RegisterMessage(VideoReply)

VideoListXRequest = _reflection.GeneratedProtocolMessageType('VideoListXRequest', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOLISTXREQUEST,
  '__module__' : 'ServerBody_pb2'
  # @@protoc_insertion_point(class_scope:ServerBody.VideoListXRequest)
  })
_sym_db.RegisterMessage(VideoListXRequest)

VideoListXReply = _reflection.GeneratedProtocolMessageType('VideoListXReply', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOLISTXREPLY,
  '__module__' : 'ServerBody_pb2'
  # @@protoc_insertion_point(class_scope:ServerBody.VideoListXReply)
  })
_sym_db.RegisterMessage(VideoListXReply)

VideoListXModel = _reflection.GeneratedProtocolMessageType('VideoListXModel', (_message.Message,), {
  'DESCRIPTOR' : _VIDEOLISTXMODEL,
  '__module__' : 'ServerBody_pb2'
  # @@protoc_insertion_point(class_scope:ServerBody.VideoListXModel)
  })
_sym_db.RegisterMessage(VideoListXModel)



_BODY = _descriptor.ServiceDescriptor(
  name='Body',
  full_name='ServerBody.Body',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=296,
  serialized_end=443,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetVideos',
    full_name='ServerBody.Body.GetVideos',
    index=0,
    containing_service=None,
    input_type=_VIDEOREQUEST,
    output_type=_VIDEOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='GetVideosX',
    full_name='ServerBody.Body.GetVideosX',
    index=1,
    containing_service=None,
    input_type=_VIDEOLISTXREQUEST,
    output_type=_VIDEOLISTXREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_BODY)

DESCRIPTOR.services_by_name['Body'] = _BODY

# @@protoc_insertion_point(module_scope)
